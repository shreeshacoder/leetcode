/*

Link: https://leetcode.com/problems/self-dividing-numbers/description/

Question: A self-dividing number is a number that is divisible by every digit it contains.

For example, 128 is a self-dividing number because 128 % 1 == 0, 128 % 2 == 0, and 128 % 8 == 0.

Also, a self-dividing number is not allowed to contain the digit zero.

Given a lower and upper number bound, output a list of every possible self dividing number, including the bounds if possible.

*/

//Solution
class Solution {
    public List<Integer> selfDividingNumbers(int left, int right) {
         List<Integer> lm = new ArrayList<Integer>();
        int i, product, temp, flag;
        for(i = left; i<=right; i++){
            temp = i;
            flag = 0;
            while(temp>0){
                product = temp%10;
                temp = temp/10;
                if(product == 0 || i%product!=0){
                    flag = 1;
                    break;
                }
                    
            }
            if(flag != 1)
                lm.add(i);
            
        }
        
        return lm;
    }
}
