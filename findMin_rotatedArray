/*
Question: Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.

Link: https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/

*/

class Solution {
    public int minUtil(int nums[], int start, int end){
        if(start == end)
            return nums[start];
        int mid = (start+end)/2;
        if(nums[mid] > nums[mid+1])
            return nums[mid+1];
        else if(nums[mid] < nums[end])
            return minUtil(nums, start, mid);
        else
            return minUtil(nums, mid+1, end);
    }
    public int findMin(int[] nums) {
        if(nums.length == 0)
            return 0;
        return minUtil(nums, 0, nums.length-1);
        
        
    }
}
